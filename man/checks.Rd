% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/argcheck.R
\name{checks}
\alias{checks}
\alias{check_type}
\alias{check_numeric}
\alias{check_length}
\alias{check_not_null}
\alias{check_lengths}
\alias{check_false}
\alias{check_in_data}
\title{Argument validation}
\usage{
check_type(arg, allowed)

check_numeric(arg, arg_name = NULL, require_positive = FALSE)

check_length(arg, expected)

check_not_null(arg)

check_lengths(a, b)

check_false(arg)

check_in_data(var_name, data)
}
\arguments{
\item{arg}{An argument to check.}

\item{allowed}{Allowed class names.}

\item{arg_name}{Argument name.}

\item{require_positive}{Should it also be checked that \code{arg} is
positive?}

\item{expected}{Expected length.}

\item{a}{An argument to check.}

\item{b}{An argument to check.}

\item{var_name}{the variable to be searched for}

\item{data}{a data frame}
}
\value{
\code{TRUE} if the check passes.
}
\description{
\itemize{
  \item \code{check_type} checks if argument has correct class
  \item \code{check_numeric} checks if argument is numeric
  \item \code{check_not_null} checks if argument is not null
  \item \code{check_false} checks if argument is false or zero
  \item \code{check_length} checks if argument has correct length
  \item \code{check_lengths} checks if two argument have equal length
  \item \code{check_in_data} checks that variable exists in a data frame
}
}
\seealso{
Other argument checks: 
\code{\link{check_allowed}()}
}
\concept{argument checks}
