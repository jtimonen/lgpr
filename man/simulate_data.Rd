% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate-main.R
\name{simulate_data}
\alias{simulate_data}
\title{Generate an artificial longitudinal data set}
\usage{
simulate_data(N, t_data, covariates = c(), names = NULL,
  relevances = c(1, 1, rep(1, length(covariates))), n_categs = rep(2,
  sum(covariates \%in\% c(2, 3))), t_jitter = 0, lengthscales = rep(12,
  2 + sum(covariates \%in\% c(0, 1, 2))), f_var = 1,
  noise_type = "Gaussian", snr = 3, phi = 1,
  N_affected = round(N/2), onset_range = range(t_data),
  t_observed = "after_0", C_hat = 0, dis_fun = NULL,
  continuous_info = list(mu = c(pi/8, pi, -0.5), lambda = c(pi/8, pi,
  1)))
}
\arguments{
\item{N}{Number of individuals.}

\item{t_data}{Measurement times.}

\item{covariates}{Integer vector that defines the types of covariates
(other than id and age). If not given, only the id and age
covariates are created. Different integers correspond to the following covariate types:
\itemize{
  \item 0 = disease-related age
  \item 1 = other continuous covariate
  \item 2 = a categorical covariate that interacts with age
  \item 3 = a categorical covariate that acts as a group offset
}}

\item{names}{Covariate names.}

\item{relevances}{Relative relevance of each component. Must have be a vector
so that \cr
 \code{length(relevances) =  2 + length(covariates)}. \cr
First two values define the relevance of the infividual-specific age and 
shared age component, respectively.}

\item{n_categs}{An integer vector defining the number of categories
for each categorical covariate, so that \code{length(n_categs)} equals to
the number of 2's and 3's in the \code{covariates} vector.}

\item{t_jitter}{Standard deviation of the jitter added to the given measurement times.}

\item{lengthscales}{A vector so that \cr \code{length(lengthscales) = }
\code{2 + sum(covariates \%in\% c(0,1,2))}.}

\item{f_var}{variance of f}

\item{noise_type}{Either "Gaussian", "Poisson" or "NB" (negative binomial).}

\item{snr}{The desired signal-to-noise ratio. This argument is valid
only with \cr
\code{noise_type = "Gaussian"}.}

\item{phi}{The dispersion parameter for negative binomial noise.}

\item{N_affected}{Number of diseased individuals that are affected by the disease. This defaults
to the number of diseased individuals. This argument can only be given if \code{covariates}
contains a zero.}

\item{onset_range}{Time interval from which the disease onsets are sampled uniformly.}

\item{t_observed}{Determines how the disease onset is observed. Must have the form \code{"after_n"}
or \code{"random_p"}}

\item{C_hat}{A constant added to f}

\item{dis_fun}{A function that defines the disease effect. If NULL, the effect
is is drawn from a nonstationary GP prior.}

\item{continuous_info}{Info for generating continuous covariates. Must be a list
containing fields \code{lambda} and \code{mu}, which have length 3. The continuous
covariates are generated so that \code{x <- sin(a*t + b) + c}, where
\itemize{
  \item \code{t <- seq(0, 2*pi, length.out = k)}
  \item \code{a <- mu[1] + lambda[1]*stats::runif(1)}
  \item \code{b <- mu[2] + lambda[2]*stats::runif(1)}
  \item \code{c <- mu[3] + lambda[3]*stats::runif(1)}
}}
}
\value{
A list \code{out}, where 
\itemize{
  \item \code{out$data} is a data frame containing the actual data and 
  \item \code{out$components} contains more points for smoother visualizations of the 
  generating process. 
  \item \code{out$onsets} contains the real disease onset times
  \item \code{out$p_signal} proportion of variance explained by signal
}
}
\description{
Generate an artificial longitudinal data set.
}
\examples{
# Generate Gaussian data
dat <- simulate_data(N = 4, t_data = c(6,12,24,36,48), snr = 3)

# Generate negative binomially distributed count data
dat <- simulate_data(N = 6, t_data = seq(2, 10, by = 2), noise_type = "NB", phi = 2)
}
